@using Microsoft.EntityFrameworkCore
@code {
    [CascadingParameter] public required IUnitOfWork UOW { get; set; }
    [Parameter] public required Recipe Model { get; set; }
    private List<Machine>? machines;
    private List<Part>? parts;

    protected override async Task OnParametersSetAsync()
    {
        machines = await UOW.Load(db => db.Machines.ToListAsync());
        parts = await UOW.Load(db => db.Parts.ToListAsync());
    }

    private void DeleteRecipe()
    {
        UOW.GetLoaded<Recipe>().Remove(Model);
        UOW.NotifyChanged();
    }

    private void AddIngredient()
    {
        Model.Items.Add(new() { Recipe = Model, Role = ItemRole.Ingredient });
        UOW.NotifyChanged();
    }

    private void AddProduct()
    {
        var role = Model.Items.Any(rp => rp.Role == ItemRole.Product) 
            ? ItemRole.Byproduct
            : ItemRole.Product;
        Model.Items.Add(new() { Recipe = Model, Role = role });
        UOW.NotifyChanged();
    }

    private void RemoveItem(Item item)
    {
        Model.Items.Remove(item);
        if (item.Role == ItemRole.Product && Model.Items.Where(bp => bp.Role == ItemRole.Byproduct).ToList() is [var first, ..])
        {
            first.Role = ItemRole.Product;
        }

        UOW.GetLoaded<Item>().Remove(item);
        UOW.NotifyChanged();
    }
}

@if (machines is not null && parts is not null)
{
    <div class="layout">
        <Block Label="Name">
            <TextField id="@context" @bind-Value="Model.Name" />
        </Block>

        <Block Label="Machine">
            <ComboField id="@context" T="Machine" @bind-Value="Model.Machine" Context="selection" Options="machines">
                <ImageBox Value="selection!.Icon" SideLength="32" />
                <span>@selection.Name</span>
            </ComboField>
        </Block>

        <Grid T="Item" Items="Model.Items.Where(i => i.Role == ItemRole.Ingredient)"
            Labels="@(["Ingredient", "Quantity"])" OnAdd="AddIngredient" OnRemove="RemoveItem">
            <ComboField T="Part" @bind-Value="context.Part" Context="selection" Options="parts">
                <ImageBox Value="selection!.Icon" SideLength="32" />
                <span>@selection.Name</span>
            </ComboField>
            <FloatField @bind-Value="context.QuantityPerMinute" />
        </Grid>

        <Grid T="Item" Items="Model.Items.Where(i => i.Role == ItemRole.Product)"
            Labels="@(["Product", "Quantity"])" OnAdd="AddProduct" OnRemove="RemoveItem">
            <ComboField T="Part" @bind-Value="context.Part" Context="selection" Options="parts">
                <ImageBox Value="selection!.Icon" SideLength="32" />
                <span>@selection.Name</span>
            </ComboField>
            <FloatField @bind-Value="context.QuantityPerMinute" />
        </Grid>

        <CommandButton @onclick="DeleteRecipe">Delete</CommandButton>
    </div>
}